name: ATUkanoid Game-CI Build and Unit Tests ðŸŽ®

on:
  push: { branches: [main] }

jobs:
  buildForWindowsBasedPlatforms:
    name: Build for Windows 64 ðŸªŸ 
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2021.3.19f1
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
        projectPath:
          - ./

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key:
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
            hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build
  testRunner:
    name: Unit Tests for ATUkanoid ðŸ§±
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - EditMode
    steps:
    #Using Personal license
    - uses: game-ci/unity-test-runner@v2
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      with:
        githubToken: ${{ secrets.HUBGIT_TOKEN }}  
    #Viewing test results
    - uses: game-ci/unity-test-runner@v2
      with:
        githubToken: ${{ secrets.HUBGIT_TOKEN }}    
    #Storing test results    
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: Test results
        path: artifacts    
    #Getting coverage results
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: Coverage results
        path: ${{ steps.myTestStep.outputs.coveragePath }}    